<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.seedm.repository.mapper.seed.IAccountMapper">
    <resultMap id="accountMap" type="AccountVo">
        <id property="id" column="id"></id>
        <result property="name" column="name"></result>
        <result property="password" column="password"></result>
        <result property="birthday" column="birthday"></result>
        <result property="idcardNo" column="idcard_no"></result>
        <result property="mobile" column="mobile"></result>
        <result property="userId" column="user_id"></result>
        <result property="nickname" column="nickname"></result>
        <result property="status" column="status" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"></result>
        <result property="createTime" column="create_time"></result>
    </resultMap>

    <insert id="insert" parameterType="AccountVo">
        INSERT INTO account
          (id, name, password, birthday, idcard_no, mobile, user_id, nickname)
        VALUES
          (#{id}, #{name}, #{password}, #{birthday}, #{idcardNo}, #{mobile}, #{userId}, #{nickname})
    </insert>

    <insert id="insertMulti">
        INSERT INTO account
          (id, name, password, birthday, idcard_no, mobile, user_id, nickname)
        VALUES
        <foreach item="account" collection="list" separator=",">
            (#{account.id}, #{account.name}, #{account.password}, #{account.birthday}, #{account.idcardNo}, #{account.mobile}, #{account.userId}, #{account.nickname})
        </foreach>

    </insert>

    <delete id="deleteById"  parameterType="AccountVo">
        DELETE FROM
        account
        WHERE
        id = #{id}
    </delete>

    <update id="update">
        UPDATE
          account
        <set>
          <if test="name != null">name = #{name},</if>
          <if test="password != null">password = #{password},</if>
          <if test="birthday != null">birthday = #{birthday},</if>
          <if test="idcardNo != null">idcard_no = #{idcardNo},</if>
          <if test="mobile != null">mobile = #{mobile},</if>
          <if test="userId != null">user_id = #{userId},</if>
          <if test="nickname != null">nickname = #{nickname},</if>
          <if test="status != null">status = #{status, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}</if>
        </set>
        WHERE
          id = #{id}
    </update>

    <select id="selectById"  resultMap="accountMap">
        SELECT
          id, name, password, birthday, idcard_no, mobile, user_id, nickname, status, create_time
        FROM
          account
        WHERE
          id = #{id}
    </select>
    
    <select id="selectAll" resultMap="accountMap">
        SELECT
          id, name, password, birthday, idcard_no, mobile, user_id, nickname, status, create_time
        FROM
          account
    </select>

    <select id="selectAllByCriteria" resultMap="accountMap">
        SELECT
          id, name, password, birthday, idcard_no, mobile, user_id, nickname, status, create_time
        FROM
          account
        <where>
          <if test="name != null">name LIKE CONCAT(CONCAT('%',#{name}),'%')</if>
          <if test="birthday != null">AND birthday = #{birthday}</if>
          <if test="mobile != null">AND mobile LIKE CONCAT(CONCAT('%',#{mobile}),'%')</if>
          <if test="userId != null">AND userId = #{user_id}</if>
          <if test="nickname != null">AND nickname LIKE CONCAT(CONCAT('%',#{nickname}),'%')</if>
          <if test="status != null">AND status = #{status, typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}</if>
        </where>
    </select>
</mapper>